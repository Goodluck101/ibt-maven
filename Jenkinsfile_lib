@Library('jenkins-library')_

pipeline {
    agent any

    tools {
            maven 'maven_3.9.3'
    }

    stages{
    stage('Git checkout'){
        steps{
            git branch: 'feature_chinwe', changelog: false, credentialsId: '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', poll: false, url: 'https://github.com/IBT-learning/ibt-maven.git'
        }
    }
    stage('Validate'){
        steps{
            withMaven(maven: 'maven_3.9.3') {
                sh 'mvn validate'
            }
        }
    }
    stage('Compile'){
        steps{
            sh 'mvn -version'
            sh 'mvn compile'
        }
    }
    stage('Test'){
        steps{
            sh 'mvn test'
        }
    }
    stage('SonarQube Analysis'){
     }
        steps{
             sonarScans()
        }
    }
    stage('Package'){
         steps{
            sh 'mvn package'
         }
      }
      stage('Vulnerability Scan'){
        steps{
           dependencyCheck()
        }
      }
      stage('upload to Artifactory'){
       steps{
          withCredentials([file(credentialsId: '3abdf6f0-9287-45fd-920b-95f6282cfbae', variable: 'mvn_settings_chinwe')]) {
                sh 'mvn deploy -s $mvn_settings_chinwe'
          }
       }
    }
      stage ('upload to Artifactory (configfile)'){
        steps{
            configFileProvider([configFile(fileId: 'artifactory-settings', targetLocation: 'mvn_settings_managed', variable: 'mvn_settings_managed')]) {
               sh 'mvn deploy -s $mvn_settings_managed'
            }
        }
      }
    }
}