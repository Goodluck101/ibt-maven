pipeline{
    agent any

    tools{
        maven 'maven_3.9.3'
        
    }


    stages{
        stage('Git checkout'){
            steps{
                git branch: 'feature-taiwo3', credentialsId: 'taiwo_github(cred)', url: 'https://github.com/IBT-learning/ibt-maven.git'

            }
        }
        stage('validate'){
            steps{

                withMaven(maven: 'maven_3.9.3') {
                    sh 'mvn --version'
                    sh 'mvn validate'
    
                }
                
            }
        }
        stage('compile'){
            steps{
                sh 'mvn --version'
                sh 'mvn compile'
            }
        }
        stage('test'){
            steps{
                sh 'mvn --version'
                sh 'mvn test'
            }
        }
        stage('sonarQubescan Scan'){
            environment{
                sonarScan = tool 'ibt-sonarqube'
            }
            steps{
                withSonarQubeEnv(credentialsId: 'student-sonar-token', installationName: 'IBT sonarqube') {
                        sh "${env.sonarScan}/bin/sonar-scanner"
                    }
            }
        }
        
        stage('package'){
            steps{
                sh 'mvn --version'
                sh 'mvn package'
            }
        }
        
        
        stage('upload to artifactory-configfile'){
            steps{
                    configFileProvider([configFile(fileId: 'artifactory-settings', targetLocation: 'mvn_settings_managed', variable: 'mvn_settings_managed')]) {
                            sh 'mvn deploy -s $mvn_settings_managed'
    
                    }
            }
        }
        stage('dependency scan'){
            steps{
                dependencyCheck additionalArguments: '''
                         -o "./"                                                                              
                         -s "./"
                         -f "ALL"
                         --prettyPrint \'\'\', odcInstallation: \'dependency-check\'''', odcInstallation: 'dependency-check'
                dependencyCheckPublisher pattern: 'dependency-check-report.xml'
            }
        }



    

        
    }
}