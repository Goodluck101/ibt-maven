pipeline {
    agent any

    tools {
        maven 'maven_3.9.3'
    }

    stages {
        stage('Github checkout') {
            steps {
                git branch: 'jan2024-abelsulamo', credentialsId: 'asulamo24', url: 'https://github.com/IBT-learning/ibt-maven.git'
            }
        }
        stage('List contents') {
            steps {
                sh 'ls -lrt'
            }
        }
        stage('validate') {
            steps {
                withMaven(maven: 'maven_3.9.3') {
                    sh 'mvn --version'
                    sh 'mvn validate'
                }
            }
        }
        stage('Sonarqube Scan') {
            environment {
                sonarScan = tool 'ibt-sonarqube_4.8'
            }
            steps {
                withSonarQubeEnv(credentialsId: 'student-sonar-token', installationName: 'IBT sonarqube') {
                    sh "${env.sonarScan}/bin/sonar-scanner"
                }
            }
        }
        stage('compile') {
            steps {
                withMaven(maven: 'maven_3.9.3') {
                    sh 'mvn --version'
                    sh 'mvn compile'
                }
            }
        }
        stage('test') {
            steps {
                withMaven(maven: 'maven_3.9.3') {
                    sh 'mvn --version'
                    sh 'mvn test'
                }
            }
        }
        stage('package') {
            steps {
                withMaven(maven: 'maven_3.9.3') {
                    sh 'mvn --version'
                    sh 'mvn package'
                }
            }
        } // Close the 'package' stage here
        stage('DependencyScan') {
            steps {
                dependencyCheck additionalArguments: '''
                -o "./"
                -s "./"
                -f "ALL"
                --prettyPrint ''', odcInstallation: 'dependency-check'
                dependencyCheckPublisher pattern: 'dependency-check-report.xml'
            }
        }
        stage('deploy') {
            steps {
                withCredentials([file(credentialsId: 'mvn-settings-asulamo', variable: 'MVN_SETTINGS')]) {
                    sh 'mvn deploy -s $MVN_SETTINGS'
                }
            }
        }
        stage('Deploy to Dev'){
        steps{
              script{
                def remote = [name: 'dev', host: '104.248.5.64', allowAnyHosts: 'true']
                withCredentials([usernamePassword(credentialsId: 'server-ssh-pw', passwordVariable: 'password', usernameVariable: 'username')]) {
                    remote.user = username
                    remote.password = password
                sshPut remote: remote, from: 'target/ibt-maven-1.0.83-SNAPSHOT.jar', into: '/opt/tomcat/webapp'
                }
              }
            }
        }
    } // end of stages
} // end of pipeline
