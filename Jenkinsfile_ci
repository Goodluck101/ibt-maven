pipeline {
    agent any

    tools{
      maven 'maven_3.8'
      sonarqube  'ibt-sonarqube_5'
    }

    stages{

      stage('Github Checkout'){
        steps{
           git branch: 'feature-uzoma', changelog: false, credentialsId: 'github_creds_uzoma', poll: false, url: 'https://github.com/IBT-learning/ibt-maven.git'


        }

      }

       stage('List Content') {
         steps{
            sh 'ls -lrt'
            }

       }

       stage('Validate') {
                steps{
                   withMaven(maven: 'maven_3.9.3') {
                       sh 'mvn --version'
                       sh 'mvn validate'
                   }
               }
       }

       stage('Sonarqube Scan') {
                    steps{
                      withSonarQubeEnv(credentialsId: 'student-sonar-token', installationName: 'IBT sonarqube') {
                          // some block
                      }
                    }
       }

       stage('Compile') {
                     steps{
                          withMaven(maven: 'maven_3.8') {
                              sh 'mvn --version'
                              sh 'mvn compile'
                          }
                     }
              }

       stage('Test') {
                steps {
                    sh 'mvn --version'
                    sh 'mvn test'
                }
       }

       stage('Package') {
                 steps {
                           sh 'mvn --version'
                           sh 'mvn package'
                 }
       }

       stage('Upload to Artifactory') {
                   steps {
                           withCredentials([file(credentialsId: 'settings_uzoma', variable: 'mvn_settings_uzoma')]) {
                              sh 'mvn deploy -s $mvn_settings_uzoma'
                           }
                   }

       }

        stage('Upload to Artifactory (config)') {
                   steps {
                        configFileProvider([configFile(fileId: 'artifactory-settings', variable: 'mvn_settings_config')]) {
                           sh 'mvn deploy -s $mvn_settings_config'
                        }

                   }
        }


    } // end of stages

} // end of pipeline