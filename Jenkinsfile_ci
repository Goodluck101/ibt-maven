pipeline {
    agent any

    tools {
            maven 'maven_3.9.3'
        }

    stages{
    stage('Git checkout'){
        steps{
            git branch: 'feature_gunjanm', changelog: false, credentialsId: 'ibt', poll: false, url: 'https://github.com/IBT-learning/ibt-maven.git'
        }
    }
    stage('Validate'){
        steps{
            withMaven(maven: 'maven_3.9.3') {
                sh 'mvn validate'
            }
        }
    }
    stage('Compile'){
        steps{
            sh 'mvn -version'
            sh 'mvn compile'
        }
    }
     stage('Test'){
            steps{
                sh 'mvn test'
            }
        }
     stage('SonarQube Analysis') {
         environment{
            sonarScan = tool 'ibt-sonarqube_4.8'
         }
         steps{
          withSonarQubeEnv(installationName: 'IBT sonarqube', credentialsId: 'student-sonar-token') {
            sh "${env.sonarScan}/bin/sonar-scanner"
          }
         }
        }
      stage('Package'){
             steps{
                 sh 'mvn package'
             }
         }
       stage('Vulnerability Scan'){
        steps{
            dependencyCheck additionalArguments: '''
                -o "./"
                -s "./"
                -f "ALL"
                --prettyPrint ''', odcInstallation: 'dependency-check'
            dependencyCheckPublisher pattern: 'dependency-check-report.xml'
        }
       }
       stage('Upload to Artifactory'){
        steps{
            withCredentials([file(credentialsId: 'mvn_settings_gunj', variable: 'mvn_settings_gunjan')]) {
                sh 'mvn deploy -s $mvn_settings_gunjan'
            }
        }
       }
       stage('Upload to Artifactory (configFile)'){
        steps{
            configFileProvider([configFile(fileId: 'artifactory-settings', targetLocation: 'mvn_settings_managed', variable: 'mvn_settings_managed')]) {
                sh 'mvn deploy -s $mvn_settings_managed'
            }
        }
       }
       stage('Run Ansible Playbook'){
        steps{
                ansiblePlaybook ( become: true,
                                  credentialsId: 'server-ssh-pwd',
                                  inventory: 'inventory.txt',
                                  playbook: 'tomcat.yaml',
                                  disableHostKeyChecking: true
                                 )
        }
       }
       stage('Deploy to Dev'){
        steps{
            script{
                def remote = [name: 'dev', host: '137.184.168.163', allowAnyHosts: true]
                withCredentials([usernamePassword(credentialsId: 'server-ssh-pwd', passwordVariable: 'password', usernameVariable: 'username')]) {
                    remote.user = username
                    remote.password = password
                 sshPut remote: remote, from: 'target/ibt-maven-1.15-SNAPSHOT.jar', into: '/opt/tomcat/apache-tomcat-9.0.82/webapps'
                }
            }
        }
       }
    }
}