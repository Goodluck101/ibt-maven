pipeline{
   agent any
tools {
        maven 'maven_3.9.3'
    }

    stages{
      stage('Git checkout'){
       steps{
            git branch: 'feature_amoo', credentialsId: 'Abd', url: 'https://github.com/IBT-learning/ibt-maven.git'
       }
      }
      stage('validate'){
        steps{
          withMaven(maven: 'maven_3.9.3') {
            sh 'mvn validate'
          }
        }
      }
      stage('compile'){
       steps{
         sh 'mvn -version'
          sh 'mvn compile'
       }
      }
      stage('test'){
             steps{
                sh 'mvn test'
      }
    }
       stage('SonarQube Analysis') {
        environment{
          sonarScan = tool 'ibt-sonarqube_4.8'
        }
         steps{
         withSonarQubeEnv(installationName: 'IBT sonarqube',credentialsId: 'student-sonar-token') {
              sh "${env.sonarScan}/bin/sonar-scanner"
         }
         }
       }

     stage('package'){
                   steps{
                      sh 'mvn package'
            }
          }
     stage('vulnerability Scan') {
      steps{
            dependencyCheck additionalArguments: '''
            -o "./"
            -s "./"
            -f "ALL"
            --prettyPrint''',odcInstallation: 'dependency-check'
            dependencyCheckPublisher pattern: 'dependency-check-report.xml'
      }
     }
     stage('upload to artifactory'){
               steps{
                       withCredentials([file(credentialsId: 'mvn_settings_abd', variable: 'mvn_settings_abd')]) {
                             sh 'mvn deploy -s $mvn_settings_abd'
                               }
                 }
               }
     stage('upload to artifactory (configFile)'){
       steps{
       configFileProvider([configFile(fileId: 'artifactory-settings', targetLocation: 'mvn_settings_managed', variable: 'mvn_settings_managed')]) {
                 sh 'mvn deploy -s $mvn_settings_managed'
              }
       }
       }

     stage('Deploy to Devtest') {
      steps{
        script{
           def remote = [name: 'devtest', host: '138.197.114.239', allowAnyHosts: true]
          withCredentials([usernamePassword(credentialsId: 'server-ssh-pwd', passwordVariable: 'password', usernameVariable: 'username')]) {
            remote.user = username
            remote.password = password
          sshPut remote: remote, from: 'target/ibt-maven-1.55-SNAPSHOT.jar', into:'/opt/tomcat/apache-tomcat-9.0.82/webapps'
}
        }
       }
     }
    }
}