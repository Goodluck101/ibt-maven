pipeline {
     agent any

     tools{
        maven 'maven_3.9.3'
     }
     stages {
         stage('Github checkout'){
            steps {
              git branch: 'jan2024_obinna', credentialsId: 'obinna_github_cred', url: 'https://github.com/IBT-learning/ibt-maven.git'
            }
         }
         stage('List contents'){
            steps {
               sh 'ls -lart'
            }
         }
         stage('validate'){
            steps {
               withMaven(maven: 'maven_3.9.3') {
                   sh 'mvn --version'
                   sh 'mvn validate'
               }
            }
         }
         stage(Sonarqube Scan){
           environment{
            sonarScan = tool 'ibt-sonarqube_4.8'
           }
            steps {
               withSonarQubeEnv(credentialsId: 'student-sonar-token', installationName: 'IBT sonarqube') {
                   sh "${env.sonarScan}/bin/sonar-scanner"
               }
            }
         }
         stage('compile'){
                     steps {
                        withMaven(maven: 'maven_3.9.3') {
                            sh 'mvn --version'
                            sh 'mvn compile'
                        }
                     }
                  }
         stage('test'){
               sh 'mvn --version'
               sh 'mvn test'
            }
         }
         stage('package'){
                     steps{
                        sh 'mvn --version'
                        sh 'mvn package'
                     }
                  }
         stage('upload to artifactory'){
                     steps{
                        withCredentials([file(credentialsId: 'mvn_bina_settings', variable: 'mvn_bina_settings')]) {
                           sh 'mvn deploy -s $mvn_bina_settings'
                        }
                     }
                  }
         stage('upload to artifactory (config)'){
                     steps{
                        configFileProvider([configFile(fileId: 'artifactory-settings', targetLocation: 'mvn_settings_config', variable: 'mvn_settings_config')]) {
                            sh 'mvn deploy -s $mvn_settings_config'
                        }
                     }
                  }
     } // end of stages
} // end of pipeline